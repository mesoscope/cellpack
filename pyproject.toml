[project]
name = "cellpack"
version = "v1.1.1"
description = "algorithm to pack molecular recipes"
keywords = ["cellpack"]
readme = "README.md"
authors = [
    {name = "Megan Riel-Mehan", email = "meganr@alleninstitute.org"},
    {name = "Saurabh Mogre", email = "saurabh.mogre@alleninstitute.org"},
    {name = "Ruge Li", email = "ruge.li@alleninstitute.org"},
]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3.9",
]
requires-python = "~=3.11"
dependencies = [
    "aicsimageio>=4.14.0",
    "boto3>=1.40.19",
    "deepdiff>=8.6.0",
    "fire>=0.7.1",
    "firebase-admin>=7.1.0",
    "grpcio>=1.74.0",
    "ipykernel>=6.30.1",
    "matplotlib>=3.10.5",
    "mdutils>=1.8.0",
    "moto>=5.1.11",
    "numpy>=2.3.2",
    "pandas>=2.3.2",
    "plotly>=6.3.0",
    "pycollada>=0.9.2",
    "pymunk>=7.1.0",
    "python-dotenv>=1.1.1",
    "rtree>=1.4.1",
    "scipy>=1.16.1",
    "simulariumio>=1.13.0",
    "tqdm>=4.67.1",
    "trimesh>=4.7.4",
]
license = {text = "MIT license"}

[project.urls]
Homepage = "https://github.com/mesoscope/cellpack"

[project.scripts]
analyze = "cellpack.bin.analyze:main"
convert = "cellpack.bin.simularium_converter:main"
pack = "cellpack.bin.pack:main"
upload = "cellpack.bin.upload:main"
clean = "cellpack.bin.clean:main"

[dependency-groups]
dev = [
    "Sphinx>=8.2.3",
    "coverage>=7.10.5",
    "ipython>=9.4.0",
    "sphinx-rtd-theme>=3.0.2",
    "tox>=4.27.0",
    "wheel>=0.45.1",
    "tox-pdm>=0.7.2",
    "bumpver>=2025.1131",
    "docutils>=0.21.2",
    "ipykernel>=6.30.1",
]
setup = [
    "pytest-runner>=6.0.1",
    "setuptools>=80.9.0",
]
test = [
    "pytest-cov>=6.2.1",
    "pytest-raises>=0.11",
    "pytest>=8.4.1",
]
lint = [
    "black>=25.1.0",
    "flake8-debugger>=4.1.2",
    "flake8>=7.3.0",
    "docutils>=0.21.2",
]
docs = [
    "linkify-it-py>=2.0.3",
    "myst-parser>=4.0.1",
]

[tool.pdm.scripts]
requirements = "pdm export -f requirements --without-hashes -o"

[tool.black]
line-length = 88

[tool.flake8]
include = "**/*.py"
ignore = [
    "E203",
    "E402",
    "E501",
    "E721",
    "W291",
    "W503",
]
max-line-length = 88

[tool.tox]
requires = [
    "tox-pdm>=0.7.2",
    "tox>=4.23.0",
]
env_list = [
    "py39",
    "lint",
]
base_python = "python3.9"

[tool.tox.env_run_base]
description = "Run tests with pytest under {base_python}"
groups = [
    "dev",
    "test",
    "lint",
]
commands = [
    ["pytest", "--basetemp={envtmpdir}", "--cov-report", "html", "--cov=cellpack", "cellpack{/}tests"],
]

[tool.tox.env.lint]
description = "Run linting with flake8 and black"
groups = [
    "lint",
]
commands = [
    ["flake8", "cellpack", "--count", "--verbose", "--show-source", "--statistics", "--ignore=E203,E277,E402,E501,E721,W291,W503"],
    ["black", "--check", "cellpack"],
]

[tool.bumpver]
current_version = "v1.1.1"
version_pattern = "vMAJOR.MINOR.PATCH"
commit_message = "bump version {old_version} -> {new_version}"
tag_message = "{new_version}"
tag_scope = "default"
pre_commit_hook = ""
post_commit_hook = ""
commit = true
tag = true
push = false

[tool.bumpver.file_patterns]
"pyproject.toml" = [
    'current_version = "{version}"',
    'version = "{version}"',
]
"cellpack/__init__.py" = [
    "{version}",
]

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"